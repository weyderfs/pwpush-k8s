---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- template "pwpush.labels" . }}
  name: {{ .Release.Name | quote }}
  namespace: {{ .Values.namespace | quote }}
spec:
  progressDeadlineSeconds: {{.Values.progressDeadlineSeconds | default 15 }}
  replicas: {{ .Values.replicas | default 1 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 10 }}
  selector:
    matchLabels:
      {{- template "pwpush.labels" . }} 
    strategy:
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge | default "25%" }}
      maxUnavailable: {{ .Values.maxUnavailable | default "25%" }}
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "pwpush.labels" . }} 
      spec:
        containers:
        - image: {{ .Values.image | default "docker.io/pglombardo/pwpush-ephemeral" | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy | default "Always" | quote }}
          name: {{ .Release.Name | quote }}
          resources:
            requests:
              memory: {{ .Values.requestMemory | default "256Mi" }}
              cpu: {{ .Values.requestCpu | default 1 }}
            limits:
              memory: {{ .Values.limitsMemory | default "512Mi" }}
              cpu: {{ .Values.limitsCpu | default 1.5 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          env:
            {{- range .Values.env }}
            - name: {{ .name | upper }}
              value: {{ .value }}
            {{- end }}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}